/* Q2 Starter — Web Fonts + Fluid Typography + Dashboard Layout
Tasks: 

1.) Define & apply colours using CSS variables and var() 
2.) Load and apply a custom font
3.) Create layout navigation with Flexbox & create a sticky navbar 
4.) Create a flexible, fluid grid layout for cards without media queries 
5.) Ensure CSS is efficient, well-formatted and valid */

/* Added some custom colours that I'll be able to reuse */
:root {
  --space-1: .5rem;
  --space-2: 1rem;
  --space-3: 1.5rem;
  --radius: .75rem;
  --color-primary: #FAFAFA;
  --links: #007399;
  --text: #2B2B2B;
}

/* 2) Base */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
  background-color: var(--color-primary);
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
}

a {
  text-decoration: none;
  color: var(--links);
}

a:hover,
a:focus {
  text-decoration: underline;
}

:focus-visible {
  outline-offset: 2px;
}

/* Added a flex container where applied space-between */
/* 3) Header — Flex nav */
.site-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-left: clamp(.3rem,var(--space-1), .7rem);
}

.logo {
  font-weight: 800;
  font-size: clamp(1.2rem,var(--space-3),1.8rem);
}

/* Also added flex here to add space between elements */
.site-nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nav-link {
  padding: .25rem .5rem;
  border-radius: .375rem;
}

.cta-btn {
  padding: .5rem .75rem;
  border: 0;
  border-radius: clamp(.6rem, var(--radius), .9rem);
  background: var(--color-primary);
  color: #fff;
}

/* 4) Hero */
.hero {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin-top: clamp(.8rem,var(--space-2), 1.2rem);
}

.hero .lead {
  max-width: 68ch;
}

.hero h1,
.hero p{
  color: var(--text);
}

/* 5) Grid — Courses */
/* Only specified rows because the content is in one column */
.page {
  display: grid;
  grid-auto-rows: minmax(300px, auto);
}

/* Here I specified the min size of each column and a row, so now it is dynamic */
.content-grid {
  grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
  grid-auto-rows: minmax(100px,auto);
  display: grid;
  gap: clamp(1.2rem,var(--space-3),1.8rem);
}

/* 6) Cards */
/* Using flex made the elements be in the centre */
.card {
  border-radius: clamp(.6rem, var(--radius), .9rem);
  padding:  clamp(.8rem,var(--space-2), 1.2rem);
  box-shadow: 0 1px 2px rgba(0, 0, 0, .06);
  transition: box-shadow .12s ease, transform .12s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.card:hover,
.card:focus-within {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, .12);
}

.card-title {
  margin: .5rem 0 .25rem;
}

.card h2,
.card p{
  color: var(--text);
}

.site-footer {
  padding:  clamp(.8rem,var(--space-2), 1.2rem);
}