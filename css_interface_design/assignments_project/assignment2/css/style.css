/* root colours that will be reused during the whole project */
:root{
    --base: #FAFAFA;
    --text: #1C1A22;
    --primary: #828282;
    --accent: #2A7ACB;
}

/* General styling rules */
body{
    margin: 0;
    padding: 0;
    font-family: "Lora", sans-serif;
}

/* Customizing the font size */
html {
    font-size: 62.5%; /* equivalent to 10px */
}

.custom-seperator{
    width: 80%;
    margin: 5rem auto;
}

/* Layout section */
/* I try to separate two sections: layout and styling, so I always know where to fix what */
/* For the header, footer and just the inside content, I prefer use flex
But for the outside content, my choice is always with grid, hope I explained it normally :)
*/
header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: sticky;
    top: 0;
    z-index: 2;
}

/* By writing position, top and z-index with the following parameters, I make my header looks sticky. */

header nav{
    display: flex;
    justify-content: space-between;
    gap: 1rem;
    margin-left: 1.5rem;
}

/* Making the first section which is in some ways a greeting section of our website be in the center */
main section:first-child{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* This will allow to cut border on the edges and basically make the content more centralized */
.main-content{
    width: 80%;
    margin: 0 auto;
    gap: 1.5rem;
}

/* Here's where grid is really good because even thought the content itself is typical because
we have a div with an image and paragraphs. We need to make the second row be reversed, the flow of the
content is different on it. */
.heading {
    display: grid;
    grid-template-columns: repeat(3, minmax(20rem, 1fr));
    align-items: start;
    gap: 3rem;
}

/* As mentioned before, for the content itself, I prefer using flex */
.middle-content-text{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.big-content{
    display: grid;
    grid-template-columns: repeat(2, minmax(50rem, 1fr));
    gap: 2rem;
}

/* Here is the part where I'm changing the position of my divs block */
.big-content:nth-child(2) div:first-child{
    grid-column: 2/3;
    grid-row: 2/3;
}

.big-content:nth-child(2) div:nth-child(2){
    grid-column: 1/2;
    grid-row: 2/3;
}

.big-content-image {
    width: 100%;
    height: 100%;
}

.big-content-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.big-content-text,
.text-second-section{
    display: flex;
    align-items: flex-start;
    justify-content: center;
    flex-direction: column;
}

footer{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Customization section */

/* Designing the header */
/* Setting the height and the background colour */
header{
    height: 8rem;
    background-color: #343a40;
}

/* Styling a elements in nav */
nav a{
    text-decoration: none;
    font-size: clamp(1.7rem, 2rem, 2.5rem);
}

/* Just specifying the colour  */
/* Wanted to have the same effect as in the example, so each a has a different colour */
nav a:first-child{
    color: #fffffb;
}

nav a:nth-child(2){
    color: #ADADAD;
}

nav a:nth-child(3){
    color: #8A8A8A;
}

/* Setting some basic styling rules as margin, padding for button and input */
header button{
    margin-right: 1.5rem;
}

header input,
header button{
    padding: 1rem 1rem;
}

header input{
    border-radius: 0.5rem;
    border: 1px solid transparent;
    font-size: clamp(1.5rem, 1.7rem, 1.9rem);
    margin-right: 0.3rem;
}

header button{
    border-radius: 0.7rem;
    color: #28a745;
    background-color: transparent;
    background-image: none;
    border-color: #28a745;
    font-size:  clamp(1.5rem, 1.7rem, 1.9rem);
}

/* When a user hovers over it, it changes the background and the text colour */
header button:hover{
    background-color: #28a745;
    color: var(--base);
}

main section:first-child{
    height: 50rem;
    background-color: #999999;
}

/* Designing the main section where I apply root colours */
main section:first-child h1{
    font-size: clamp(4rem, 4.5rem, 5rem);
    color: var(--base);
    margin-bottom: 1rem;
}

main section:first-child p{
    font-size: clamp(1.7rem, 2rem, 2.3rem);
    letter-spacing: 0.15rem;
    max-width: 60ch;
    color: var(--base);
}

/* Making the button in the first section essentially look big and blue */
main section:first-child button{
    padding: 1rem 1rem;
    background-color: var(--accent);
    color: var(--base);
    border: 1px solid transparent;
    font-size: clamp(1.6rem, 1.8rem, 2rem);
    line-height: 1.5;
    border-radius: .25rem;
}

/* Making our circles */
.circle{
    width: 15rem;
    height: 15rem;
    background-color: var(--primary);
    border-radius: 50%;
    margin: 5rem auto;
}

.middle-content-text h2{
    font-size: clamp(2.3rem, 2.7rem, 3rem);
    color: var(--primary);
    font-weight: 700;
}

.middle-content-text p{
    font-size: clamp(1.8rem, 2rem, 2.2rem);
    max-width: 30ch;
    color: var(--primary);
    line-height: 1.2;
    font-weight: 400;
    text-align: center;
}

/* Making this paragraph a bit longer, so "View-Results" paragraph are now aligned */
#long-text{
    max-width: 35ch
}

/* Customizing view-details paragraph */
.view_details{
    border: 1px solid var(--primary);
    padding: 1rem;
    background-color: var(--primary);
    font-size: clamp(1.4rem, 1.6rem, 1.8rem);
    font-weight: 400;
    line-height: 1.5;
    color:var(--base);
    text-align: center;
    text-decoration: none;
}

/* Big content styling */
/* Adding general styling customization as font-size, color and others for the content in the big section */
.big-content-text h2,
.text-second-section h2{
    color: #2a2f37;
    font-weight: 600;
    font-size: clamp(3.6rem, 4rem, 4.4rem);
    max-width: 20ch;
    text-align: left;
    margin-bottom: 0;
}

.big-content-text span,
.text-second-section span{
    color: #8A8A8A;
    font-size: clamp(2.7rem, 3rem, 3.3rem);
    font-weight: 600;
    max-width: 20ch;
    text-align: left;
}

.big-content-text p,
.text-second-section p{
    color: var(--primary);
    font-size: clamp(1.8rem, 2rem, 2.2rem);
    line-height: 1.2;
    font-weight: 400;
    margin-top: 0.5rem;
}

/* Styling footer */
footer{
    height: 8rem;
    margin: 2rem auto;
    width: 80%;
}

footer p{
    font-size: clamp(1.5rem, 1.7rem, 1.9rem);
    color: var(--primary);
    line-height: 1.2;
    font-weight: 400;
}

footer a{
    color: var(--accent);
    text-decoration: none;
}